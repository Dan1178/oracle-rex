# Generated by Django 5.1.7 on 2025-03-10 02:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('resources', models.PositiveIntegerField(default=0)),
                ('influence', models.PositiveIntegerField(default=0)),
                ('trait', models.CharField(choices=[('industrial', 'Industrial'), ('hazardous', 'Hazardous'), ('cultural', 'Cultural'), ('none', 'None')], default='none', max_length=20)),
                ('tech_specialty', models.CharField(choices=[('red', 'Red'), ('blue', 'Blue'), ('green', 'Green'), ('yellow', 'Yellow'), ('none', 'None')], default='none', max_length=20)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('faction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.faction')),
            ],
        ),
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ship_class', models.CharField(choices=[('destroyer', 'Destroyer'), ('cruiser', 'Cruiser'), ('carrier', 'Carrier'), ('dreadnought', 'Dreadnought'), ('warSun', 'War Sun'), ('fighter', 'Fighter')], max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.player')),
            ],
        ),
        migrations.CreateModel(
            name='GroundUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_class', models.CharField(choices=[('infantry', 'Infantry'), ('mech', 'Mech')], max_length=20)),
                ('planet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.planet')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.player')),
                ('ship', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ship')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('struct_class', models.CharField(choices=[('spaceDock', 'Space Dock'), ('pds', 'PDS')], max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.player')),
                ('planet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.planet')),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tile_id', models.CharField(max_length=4, unique=True)),
                ('anomaly', models.CharField(choices=[('asteroid-field', 'Asteroid Field'), ('gravity-rift', 'Gravity Rift'), ('muatt-supernova', 'Muatt Supernova'), ('Nebula', 'Nebula'), ('supernova', 'Supernova'), ('none', 'None')], default='none', max_length=20)),
                ('wormhole', models.CharField(choices=[('alpha', 'Alpha'), ('beta', 'Beta'), ('gamma', 'Gamma'), ('delta', 'Delta'), ('all', 'All'), ('none', 'None')], default='none', max_length=20)),
                ('planets', models.ManyToManyField(related_name='systems', to='core.planet')),
            ],
        ),
        migrations.AddField(
            model_name='ship',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.system'),
        ),
        migrations.AddField(
            model_name='faction',
            name='home_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factions', to='core.system'),
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=3)),
                ('adjacent_tiles', models.ManyToManyField(blank=True, to='core.tile')),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.system')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='starting_position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tile'),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, unique=True)),
                ('players', models.ManyToManyField(related_name='games', to='core.player')),
                ('board', models.ManyToManyField(related_name='games', to='core.tile')),
            ],
        ),
    ]
